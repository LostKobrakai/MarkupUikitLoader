<?php

/**
 * Configure 'YOOtheme uikit Load Module'
 * http://processwire.com/blog/posts/new-module-configuration-options/
 *
 * Injects framework markup.
 * Use <!--uikit-here-CSS--> and <!--uikit-here-JS--> to have it replaced with the markup.
 *
 *
 * for ProcessWire 2.x
 * Copyright (C) 2015 by Ryan Cramer
 * This file licensed under Mozilla Public License v2.0 http://mozilla.org/MPL/2.0/
 *
 *  \   /\
 *  )  ( ')
 * (  /  )
 * \(__)|
 * https://processwire.com
 * uikit Framework by YOOtheme, Licensed under MIT license.
 * http://getuikit.com
 *
 */

class MarkupUikitLoader extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			'title' => 'uikit Loader',
			'version' => 1,
			'summary' => 'Configure and inject the uikit framework markup (www.getuikit.com)',
			'href' => 'https://www.getuikit.com',
			'singular' => true,
			'autoload' => true,
			'icon' => 'gavel',
			'author' => 'kater',
		);
	}

	/**
	 * Initialize the module
	 *
	 */

	public function init() {
		/**
		 * add a hook after each page is rendered and modify the output
		 *
		 */
		if ($this->uikit_active == 1) {
			$this->addHookAfter('Page::render', $this, 'inject');
		}
	}

	/**
	 * Injecting the relevant markup
	 *
	 */

	public function inject($event) {
		if ($this->uikit_active == 1) {

			$page = $event->object;
			$pw_tpl = wire('config')->urls->templates;
			$uikit_source = wire('modules')->uikit_source;
			$mu_link = "<link rel='stylesheet' type='text/css' href='";
			$mu_script = "<script charset='utf-8' src='";
			$CDN = "<script src='https://code.jquery.com/jquery-" . $this->uikit_jquery_version . ".min.js'></script>\n";
			$mu_mainjs = "";
			$mu_maincss = "";
			$uikit_min = "";
			$uikit_comp_style = "";
			$key = "";

			// Minimized?
			$uikit_min = ($this->uikit_min == 1) ? '.min' : '';

			// Uikit styles
			if ($this->uikit_style != "custom") {
				// Construct strings CSS uikit default styles
				if ($this->uikit_cdn == 0) {
							// local install
							$uikit_comp_style = $this->uikit_style;
							$mu_maincss .= $mu_link . $pw_tpl . $this->uikit_path . "css/uikit" . $uikit_comp_style . $uikit_min . ".css'>\n";
						} else {
							// CDN
							$uikit_comp_style = $this->uikit_style;
							$mu_maincss .= $mu_link . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/css/uikit" . $uikit_comp_style . $uikit_min . ".css'>\n";
						}
			} else {
				// Construct strings CSS custom style
				$mu_maincss .= $mu_link . $pw_tpl . $this->uikit_path_style . "'>\n";
			}

			// jQuery first
			$mu_mainjs .= ($this->uikit_jquery == 1) ? $mu_script . $pw_tpl . "scripts/jquery.js'></script>\n" : "";
			$mu_mainjs .= ($this->uikit_jquery_cdn == 1) ? $CDN : "";

			// uikit base JS
			if ($this->uikit_cdn == 0) {
				// local install
				$mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/" . $key . "uikit" . $uikit_min . ".js'></script>\n";
			} else {
				// CDN
				$mu_mainjs .= $mu_script . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/js/" . $key . "uikit" . $uikit_min . ".js'></script>\n";
			}
			// Condition block #1

			if (($this->uikit_all_1 == 1) || (in_array($page->template->name, $this->uikit_templateselect_1)) || (in_array($page->id, $this->uikit_pageselect_1))) {

				// construct markup string CSS #1
				foreach ($uikit_source as $key => $value) {
					if ($uikit_source[$key][0] == 1) { //CSS Flag
						if (in_array($key, $this->uikit_component_1)) {
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_maincss .= $mu_link . $pw_tpl . $this->uikit_path . "css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							} else {
								// CDN
								$mu_maincss .= $mu_link . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							}
						}
					}
				}

				// construct markup string base JS #1
				// $mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/uikit" . $uikit_min . ".js'></script>\n";

				// construct markup string components JS #1
				foreach ($uikit_source as $key => $value) {
					if (in_array($key, $this->uikit_component_1)) {
						if ($uikit_source[$key][1] == 1) { //JS Flag
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/components/" . $key . $uikit_min . ".js'></script>\n";
							} else {
								// CDN
								$mu_mainjs .= $mu_script . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/js/components/" . $key . $uikit_min . ".js'></script>\n";
							}
						}
					}
				}
			}

			// Condition Block #2
			if (($this->uikit_all_2 == 1) || (in_array($page->template->name, $this->uikit_templateselect_2)) || (in_array($page->id, $this->uikit_pageselect_2))) {

				// construct markup string CSS #2
				foreach ($uikit_source as $key => $value) {
					if ($uikit_source[$key][0] == 1) { //CSS Flag
						if (in_array($key, $this->uikit_component_2)) {
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_maincss .= $mu_link . $pw_tpl . $this->uikit_path . "css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							} else {
								// CDN
								$mu_maincss .= $mu_link . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							}
						}
					}
				}

				// construct markup string base JS #2
				// $mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/uikit" . $uikit_min . ".js'></script>\n";

				// construct markup string components JS #2
				foreach ($uikit_source as $key => $value) {
					if (in_array($key, $this->uikit_component_2)) {
						if ($uikit_source[$key][1] == 1) { //JS Flag
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/components/" . $key . $uikit_min . ".js'></script>\n";
							} else {
								// CDN
								$mu_mainjs .= $mu_script . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/js/components/" . $key . $uikit_min . ".js'></script>\n";
							}

						}
					}
				}
			}

			// Condition Block #3
			if (($this->uikit_all_3 == 1) || (in_array($page->template->name, $this->uikit_templateselect_3)) || (in_array($page->id, $this->uikit_pageselect_3))) {

				// construct markup string CSS #3
				foreach ($uikit_source as $key => $value) {
					if ($uikit_source[$key][0] == 1) { //CSS Flag
						if (in_array($key, $this->uikit_component_3)) {
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_maincss .= $mu_link . $pw_tpl . $this->uikit_path . "css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							} else {
								// CDN
								$mu_maincss .= $mu_link . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/css/components/" . $key . $uikit_comp_style . $uikit_min . ".css'>\n";
							}
						}
					}
				}

				// construct markup string base JS #3
				// $mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/uikit" . $uikit_min . ".js'></script>\n";

				// construct markup string components JS #3
				foreach ($uikit_source as $key => $value) {
					if (in_array($key, $this->uikit_component_3)) {
						if ($uikit_source[$key][1] == 1) { //JS Flag
							if ($this->uikit_cdn == 0) {
								// local install
								$mu_mainjs .= $mu_script . $pw_tpl . $this->uikit_path . "js/components/" . $key . $uikit_min . ".js'></script>\n";
							} else {
								// CDN
								$mu_mainjs .= $mu_script . "https://cdnjs.cloudflare.com/ajax/libs/uikit/" . $this->uikit_cdn_version . "/js/components/" . $key . $uikit_min . ".js'></script>\n";
							}

						}
					}
				}
			}

			// return and inject
			$event->return = str_replace("<!--uikit-here-CSS-->", $mu_maincss, $event->return);
			$event->return = str_replace("<!--uikit-here-JS-->", $mu_mainjs, $event->return);
		}
	}
}